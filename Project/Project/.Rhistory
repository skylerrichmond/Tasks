plot(AnolisTree2, cex=0.25)
tree <- read.tree(text='(((A, B), (C, D)), E);')
plot.phylo(tree, type='phylogram', show.tip.label=FALSE, edge.color='red')
Question 4:
plot.phylo(tree, type='radial')
Question 5:
plot.phylo(tree, tip.color = 'red')
Question6-8: Anolis occultis had the shortest edge length.
plot(AnolisTree, cex=0.25) 
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
which(Lengths == min(Lengths))
names(Lengths)
AnolisTree2 <- drop.tip(AnolisTree, 'Anolis_occultus')
plot(AnolisTree2, cex=0.25)
ltt(AnolisTree)
abline(0, 1, lwd=2, col='red', lty=2)
The line never goes down because it is increasing until tje slope hits a plateau meaning that the lizards will reach an asymptote eventually but increase until then. 
fit.bd(AnolisTree, rho = 0.2)
install.packages('treebase')
library('treebase')
library('ape')
Dolphins <- search_treebase("Delphinus", by='taxon', max_trees = 10)
WillWork <- sapply(Dolphins, function(x) try(is.ultrametric(x)))
which(WillWork == TRUE)
pdf('r07_DolphinPhylogeny.pdf', height =5, width=5)
DolphinPlot <- plot.phylo(Dolphins[[9]], cex = 0.35)
dev.off()
is.ultrametric(Dolphins[[7]])
bddolphin <- fit.bd(Dolphins[[7]], rho = 0.2)
bddolphin
b = 0.67 d= 0.59
Tigers <- search_treebase("Tigris", by='taxon', max_trees=3)
WillWork <- sapply(Tigers, function(x) try(is.ultrametric(x)))
pdf('r07_TigerPhylogeny.pdf', height =5, width=5)
TigersPlot <- plot.phylo(Tigers[[2]], cex=0.1)
dev.off()
bdtigers <- fit.bd(Tigers[[2]], rho = 0.2)
bdtigers
b = 0.67 d= 0.62
Warblers <- search_treebase("Basileuterus", by='taxon', max_trees=20)
length(Warblers)
pdf('r07_WarblerPhylogeny.pdf', height =5, width=5)
WarblersPlot <- plot.phylo(Warblers[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Warblers, function(x) try(is.ultrametric(x)))
bdwarblers <- fit.bd(Warblers[[1]], rho =0.2)
bdwarblers
b = 1.08 d= 0.90
Elephants <- search_treebase('elephas', by='taxon', max_trees=25)
setwd('~/Desktop/Evolution/Tasks/Task_07')
library(phytools)
library(ape)
text.string <-
'(((((((cow, pig), whale),(bat,(lemur, human))), (robin, iguana)), coelacanth
), (gold_fish, trout)), shark);'
vert.tree <- read.tree(text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame='circle', bg='white', cex=1)
Question 1: The goldfish is more closely related to a shark than a human.
vert.tree
Question 2: No, there are no branch lengths in this tree. 
str(vert.tree)
tree <- read.tree(text='(((A,B), (C,D)), E);')
plotTree(tree, offset=1)
tiplabels(frame='circle', bg='lightblue', cex=1)
nodelabels(frame='circle', bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree <- force.ultrametric(read.tree('https://jonsmitchell.com/data/anolis.tre'))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main='', xlab='edge lengths for Anolis tree', ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2] <= Ntip(AnolisTree))
tipEdges
Lengths <- AnolisTree$edge.length
names(Lengths) <- AnolisTree$tip.label
names(Lengths)[which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
Question 3:
tree <- read.tree(text='(((A, B), (C, D)), E);')
plot.phylo(tree, type='phylogram', show.tip.label=FALSE, edge.color='red')
Question 4:
plot.phylo(tree, type='radial')
Question 5:
plot.phylo(tree, tip.color = 'red')
Question6-8: Anolis occultis had the shortest edge length.
plot(AnolisTree, cex=0.25) 
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
which(Lengths == min(Lengths))
names(Lengths)
AnolisTree2 <- drop.tip(AnolisTree, 'Anolis_occultus')
plot(AnolisTree2, cex=0.25)
ltt(AnolisTree)
abline(0, 1, lwd=2, col='red', lty=2)
The line never goes down because it is increasing until the slope hits a plateau meaning that the lizards will reach an asymptote eventually but increase until then. 
fit.bd(AnolisTree, rho = 0.2)
install.packages('treebase')
library('treebase')
library('ape')
Warblers <- search_treebase("Basileuterus", by="taxon", max_trees=20)
length(Warblers)
pdf("r07-WarblerPhylo.pdf", height=5, width=5)
WarblersPlot <- plot.phylo(Warblers[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Warblers, function(x) try(is.ultrametric(x)))
WillWork
bdwarblers <- fit.bd(Warblers[[1]], rho=0.2)
bdwarblers
b=15.4316 d=8.0977
Skinks <- search_treebase("Dasia", by="taxon", max_trees=20)
length(Skinks)
pdf("r07-SkinksPhylo.pdf", height=5, width=5)
SkinksPlot <- plot.phylo(Skinks[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Skinks, function(x) try(is.ultrametric(x)))
WillWor
bdskinks <- fit.bd(Warblers[[1]], rho=0.2)
bdskinks
b=15.4316 d=8.0977
TreeFrogs <- search_treebase("Hyla", by="taxon", max_trees=20)
length(TreeFrogs)
pdf("r07-TreeFrogsPhylo.pdf", height=5, width=5)
TreeFrogsPlot <- plot.phylo(TreeFrogs[[1]], cex=0.35)
dev.off()
WillWork <- sapply(TreeFrogs, function(x) try(is.ultrametric(x)))
WillWork
bdTreeFrogs <- fit.bd(TreeFrogs[[1]], rho=0.2)
bdTreeFrogs
Skinks <- search_treebase("Dasia", by="taxon", max_trees=20)
length(Skinks)
pdf("r07-SkinksPhylo.pdf", height=5, width=5)
SkinksPlot <- plot.phylo(Skinks[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Skinks, function(x) try(is.ultrametric(x)))
WillWork
bdskinks <- fit.bd(Warblers[[1]], rho=0.2)
bdskinks
install.packages("treebase")
library("treebase")
library("ape")
Elephants <- search_treebase("Elephas", by="taxon", max_trees=20)
length(Elephants)
pdf("r07-WarblerPhylo.pdf", height=5, width=5)
ElephantsPlot <- plot.phylo(Elephants[[1]], cex=0.35
dev.off()
WillWork <- sapply(Elephants, function(x) try(is.ultrametric(x)))
WillWork
bdElephants <- fit.bd(Elephants[[1]], rho=0.2)
bdElephants
Warblers <- search_treebase("Basileuterus", by="taxon", max_trees=20)
length(Warblers)
pdf("r07-WarblerPhylo.pdf", height=5, width=5)
WarblersPlot <- plot.phylo(Warblers[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Warblers, function(x) try(is.ultrametric(x)))
WillWork
bdwarblers <- fit.bd(Warblers[[1]], rho=0.2)
bdwarblers
b=15.4316 d=8.0977
Elephants <- search_treebase("Elephas", by="taxon", max_trees=20)
length(Elephants)
pdf("r07-ElephantPhylo.pdf", height=5, width=5)
ElephantsPlot <- plot.phylo(Elephants[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Elephants, function(x) try(is.ultrametric(x)))
WillWork
bdElephants <- fit.bd(Elephants[[1]], rho=0.2)
bdElephants
pdf("r07-ElephantPhylo.pdf", height=5, width=5)
Monkeys <- search_treebase("Guenon", by="taxon", max_trees=20)
length(Monkeys)
pdf("r07-MonkeysPhylo.pdf", height=5, width=5)
MonkeysPlot <- plot.phylo(Monkeys[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Monkeys, function(x) try(is.ultrametric(x)))
WillWork
bdMonkeys <- fit.bd(Monkeys[[1]], rho=0.2)
bdMonkeys
Primates <- search_treebase("Cheirogaleus", by="taxon", max_trees=20)
length(Primates)
pdf("r07-PrimatesPhylo.pdf", height=5, width=5)
PrimatesPlot <- plot.phylo(Primates[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Primates, function(x) try(is.ultrametric(x)))
WillWork
bdPrimates <- fit.bd(Primates[[1]], rho=0.2)
bdPrimates
Tigers <- search_treebase("Tigris", by="taxon", max_trees=20)
length(Tigers)
pdf("r07-TigersPhylo.pdf", height=5, width=5)
TigersPlot <- plot.phylo(Tigers[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Tigers, function(x) try(is.ultrametric(x)))
WillWork
bdTigers <- fit.bd(Tigers[[1]], rho=0.2)
bdTigers
Tigers <- search_treebase("Tigris", by="taxon", max_trees=20)
length(Tigers)
pdf("r07-TigersPhylo.pdf", height=5, width=5)
TigersPlot <- plot.phylo(Tigers[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Tigers, function(x) try(force.ultrametric(x)))
WillWork
bdTigers <- fit.bd(Tigers[[1]], rho=0.2)
bdTigers
Lions <- search_treebase("Panthera", by="taxon", max_trees=20)
length(Lions)
pdf("r07-LionsPhylo.pdf", height=5, width=5)
LionsPlot <- plot.phylo(Lions[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Lions, function(x) try(is.ultrametric(x)))
WillWork
bdLions <- fit.bd(Lions[[1]], rho=0.2)
bdLions
Chickens <- search_treebase("Junglefowl", by="taxon", max_trees=20)
length(Chickens)
pdf("r07-ChickensPhylo.pdf", height=5, width=5)
ChickensPlot <- plot.phylo(Chickens[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Chickens, function(x) try(is.ultrametric(x)))
WillWork
bdChickens <- fit.bd(Chickens[[1]], rho=0.2)
bdChickens
Dogs <- search_treebase("Canus", by="taxon", max_trees=20)
length(Dogs)
pdf("r07-DogsPhylo.pdf", height=5, width=5)
DogsPlot <- plot.phylo(Dogs[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Dogs, function(x) try(is.ultrametric(x)))
WillWork
bdDogs <- fit.bd(Dogs[[1]], rho=0.2)
bdDogs
Pandas <- search_treebase("Panthera", by="taxon", max_trees=20)
length(Pandas)
pdf("r07-PandasPhylo.pdf", height=5, width=5)
PandasPlot <- plot.phylo(Pandas[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Pandas, function(x) try(is.ultrametric(x)))
WillWork
bdPandas <- fit.bd(Pandas[[1]], rho=0.2)
q()
setwd('C:\\Users\\Skyler Richmond\\Desktop\\Evolution\\Tasks\\Project\\Project\\')
Data <- read.csv('data.csv', stringsAsFactors=F)
Surv <- Data[,7]
Temp <- Data[,5]
PercentHatching <- tapply(Surv, Temp, function(x) sum(x)/length(x))
MeanHatching <- tapply(Surv, Temp, mean)
SDHatching <- tapply(Surv,Temp,sd)
Temps <- 1:3
RealTemp <- c(12.8, 24, 25.6) # Actual temperature from the paper for treatments 1, 2, and 3 (cold, benign, hot)
RealTemps <- RealTemp[Temp]
TotalData <- cbind(RealTemp, PercentHatching)
plot(as.numeric(names(MeanHatching)), MeanHatching, ylim=c(0,1))
silent <- sapply(1:length(MeanHatching), function(x) segments(Temps[x], MeanHatching[x]-SDHatching[x], Temps[x], MeanHatching[x]+SDHatching[x]))
# For data2
Data <- read.csv('data2.csv', stringsAsFactors=F)
Data2Temp <- 25 # Actual temperature the eggs in the Neither shcoked treatment from paper 2 were raised at
NeitherShocked <- which(Data$Treatment == "Neither shocked")
Hatching2 <- Data[NeitherShocked,5]
SummaryData2 <- cbind(rep(Data2Temp, length(Hatching2)), Hatching2)
TotalData <- rbind(TotalData, SummaryData2)
# For data3
Data <- read.csv('data3.csv', stringsAsFactors=F)
Surv3<- Data[,5]
Temp3<-Data[,3]
head(Data)
SummaryData3<-cbind(Temp3, Surv3)
head(SummaryData3)
TotalData <- rbind(TotalData, SummaryData3)
#for data4
Data <- read.table('data4.txt', sep="\t", stringsAsFactors=F, header=T)
head(Data)
SummaryData4<-cbind(Data[,1], Data[,3])
TotalData <- rbind(TotalData, SummaryData4)
head(SummaryData4)
#For data5
Data <- read.csv('data5.csv', stringsAsFactors=F)
Surv5<- Data[,4]
Temp5<-Data[,3]
head(Data)
SummaryData5<-cbind(Temp5, Surv5)
TotalData <- rbind(TotalData, SummaryData5)
#For data6
Data <- read.csv('data6.csv', stringsAsFactors=F)
Surv6<- Data[,12]
Temp6<-Data[,1]
head(Data)
SummaryData6<-cbind(Temp6, Surv6)
head(SummaryData6)
TotalData <- rbind(TotalData, SummaryData6)
plot(TotalData[,1], TotalData[,2], xlab="Temperature (Celsius)", ylab="Proportion hatching (%)")
LM <- lm(TotalData[,2]~TotalData[,1])
abline(LM, col="black", lty=1)
summary(LM)
MeanViability<-mean(Surv3, Surv6, Surv5, Hatching2)
head(TotalData)
MeanViability<-mean(PercentHatching)
head(MeanViability)
SDViability<-sd(PercentHatching)
head(SDViability)
ModeTemperature<-mode(RealTemp)
head(ModeTemperature)
AverageTemperature<-mean(RealTemp)
head(AverageTemperature)
cor(RealTemp, PercentHatching)
CTest <- cor.test(TotalData[,1], TotalData[,2])
ViabilityCor<- cor.test(RealTemp, PercentHatching)
summary(ViabilityCor)
ViabilityANOVA <- aov(RealTemp ~ PercentHatching)
boxplot( TotalData[,2] ~ TotalData[,1], xlab="Temperature", ylab= "Percent Hatching" )
legend("topleft", bty="n", legend=paste("r = ", round(CTest$estimate, digits=2), sep=""))
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01 )
CTest <- cor.test(TotalData[,1], TotalData[,2])
plot(TotalData[,1], TotalData[,2], xlab="Temperature (Celsius)", ylab="Proportion hatching (%)")
abline(LM, col="black", lty=1)
summary(LM)
abline(LM, col="black", lty=1)
plot(TotalData[,1], TotalData[,2], xlab="Temperature (Celsius)", ylab="Proportion hatching (%)")
LM <- lm(TotalData[,2]~TotalData[,1])
abline(LM, col="black", lty=1)
summary(LM)
legend("topleft", bty="n", legend=paste("r = ", digits=2), sep=""))
MeanViabilit
legend("topleft", bty="n", legend=paste("r = ",Round(LR$estimate,digits=2), sep=""))
legend("topleft", bty="n", legend=paste("r = ", round(LR$estimate,digits=2), sep=""))
legend("topleft", bty="n", legend=paste("r = ", round(LM$estimate,digits=2), sep=""))
legend("topleft", bty="n", legend=paste("r = ", round(CTest$estimate), sep=""))
plot(TotalData[,2], TotalData[,1], xlab="Temperature (Celsius)", ylab="Proportion hatching (%)")
LM <- lm(TotalData[,2]~TotalData[,1])
abline(LM, col="black", lty=1)
summary(LM)
legend("topleft", bty="n", legend=paste("r = ", round(LM$estimate,digits=2), sep=""))
legend("topleft", bty="n", legend=paste("r = ", round(LM$estimate), sep=""))
legend("topleft", bty="n", legend=paste("r = ", round(CTest$estimate), sep=""))
plot(TotalData[,2], TotalData[,1], xlab="Temperature (Celsius)", ylab="Proportion hatching (%)")
legend("topleft", bty="n", legend=paste("r = ", round(CTest$estimate), sep=""))
abline(LM, col="black", lty=1)
abline(LM, col="black", lty=1)
plot(TotalData[,1], TotalData[,2], xlab="Temperature (Celsius)", ylab="Proportion hatching (%)")
LM <- lm(TotalData[,2]~TotalData[,1])
abline(LM, col="black", lty=1)
summary(LM)
ViabilityANOVA <- aov(RealTemp ~ PercentHatching)
ViabilityANOVA
MeanViability<-mean(TotalData[,2])
head(MeanViability)
SDViability<-sd(TotalData[,2])
head(SDViability)
ModeTemperature<-mode(TotalData[,1])
head(ModeTemperature)
CTest <- cor.test(TotalData[,1], TotalData[,2])
ViabilityANOVA <- aov(TotalData[,1] ~ TotalData[,2])
ViabilityANOVA
mean(TotalData[,2])
TotalData[,2]
mean(TotalData[,2])
q()
SummaryData2
SummaryData3
setwd('C:\\Users\\Skyler Richmond\\Desktop\\Evolution\\Tasks\\Project\\Project\\')
Data <- read.csv('data.csv', stringsAsFactors=F)
Surv <- Data[,7]
Temp <- Data[,5]
PercentHatching <- tapply(Surv, Temp, function(x) sum(x)/length(x))
MeanHatching <- tapply(Surv, Temp, mean)
SDHatching <- tapply(Surv,Temp,sd)
Temps <- 1:3
RealTemp <- c(12.8, 24, 25.6) # Actual temperature from the paper for treatments 1, 2, and 3 (cold, benign, hot)
RealTemps <- RealTemp[Temp]
TotalData <- cbind(RealTemp, PercentHatching)
plot(as.numeric(names(MeanHatching)), MeanHatching, ylim=c(0,1))
silent <- sapply(1:length(MeanHatching), function(x) segments(Temps[x], MeanHatching[x]-SDHatching[x], Temps[x], MeanHatching[x]+SDHatching[x]))
# For data2
Data <- read.csv('data2.csv', stringsAsFactors=F)
Data2Temp <- 25 # Actual temperature the eggs in the Neither shcoked treatment from paper 2 were raised at
NeitherShocked <- which(Data$Treatment == "Neither shocked")
Hatching2 <- Data[NeitherShocked,5]
SummaryData2 <- cbind(rep(Data2Temp, length(Hatching2)), Hatching2)
TotalData <- rbind(TotalData, SummaryData2)
# For data3
Data <- read.csv('data3.csv', stringsAsFactors=F)
Surv3<- Data[,5]
Temp3<-Data[,3]
head(Data)
SummaryData3<-cbind(Temp3, Surv3)
head(SummaryData3)
TotalData <- rbind(TotalData, SummaryData3)
#for data4
Data <- read.table('data4.txt', sep="\t", stringsAsFactors=F, header=T)
head(Data)
SummaryData4<-cbind(Data[,1], Data[,3])
TotalData <- rbind(TotalData, SummaryData4)
head(SummaryData4)
#For data5
Data <- read.csv('data5.csv', stringsAsFactors=F)
Surv5<- Data[,4]
Temp5<-Data[,3]
head(Data)
SummaryData5<-cbind(Temp5, Surv5)
TotalData <- rbind(TotalData, SummaryData5)
#For data6
Data <- read.csv('data6.csv', stringsAsFactors=F)
Surv6<- Data[,12]
Temp6<-Data[,1]
head(Data)
SummaryData6<-cbind(Temp6, Surv6)
head(SummaryData6)
TotalData <- rbind(TotalData, SummaryData6)
plot(TotalData[,1], TotalData[,2], xlab="Temperature (Celsius)", ylab="Proportion hatching (%)")
LM <- lm(TotalData[,2]~TotalData[,1])
abline(LM, col="black", lty=1)
summary(LM)
legend("topleft", bty="n", legend=paste("r = ", round(LM$estimate), sep=""))
MeanViability<-mean(TotalData[,2])
head(MeanViability)
SDViability<-sd(TotalData[,2])
head(SDViability)
ModeTemperature<-mode(TotalData[,1])
head(ModeTemperature)
CTest <- cor.test(TotalData[,1], TotalData[,2])
ViabilityANOVA <- aov(TotalData[,1] ~ TotalData[,2])
boxplot( TotalData[,2] ~ TotalData[,1], xlab="Temperature", ylab= "Percent Hatching" )
legend("topleft", bty="n", legend=paste("r = ", round(CTest$estimate), sep=""))
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01 )
head(SummaryData3)
SummaryData3
setwd('C:\\Users\\Skyler Richmond\\Desktop\\Evolution\\Tasks\\Project\\Project\\')
Data <- read.csv('data.csv', stringsAsFactors=F)
Surv <- Data[,7]
Temp <- Data[,5]
PercentHatching <- tapply(Surv, Temp, function(x) sum(x)/length(x))
MeanHatching <- tapply(Surv, Temp, mean)
SDHatching <- tapply(Surv,Temp,sd)
Temps <- 1:3
RealTemp <- c(12.8, 24, 25.6) # Actual temperature from the paper for treatments 1, 2, and 3 (cold, benign, hot)
RealTemps <- RealTemp[Temp]
TotalData <- cbind(RealTemp, PercentHatching)
plot(as.numeric(names(MeanHatching)), MeanHatching, ylim=c(0,1))
silent <- sapply(1:length(MeanHatching), function(x) segments(Temps[x], MeanHatching[x]-SDHatching[x], Temps[x], MeanHatching[x]+SDHatching[x]))
# For data2
Data <- read.csv('data2.csv', stringsAsFactors=F)
Data2Temp <- 25 # Actual temperature the eggs in the Neither shcoked treatment from paper 2 were raised at
NeitherShocked <- which(Data$Treatment == "Neither shocked")
Hatching2 <- Data[NeitherShocked,5]
SummaryData2 <- cbind(rep(Data2Temp, length(Hatching2)), Hatching2)
TotalData <- rbind(TotalData, SummaryData2)
# For data3
Data <- read.csv('data3.csv', stringsAsFactors=F)
Surv3<- Data[,5]
Temp3<-Data[,3]
head(Data)
SummaryData3<-cbind(Temp3, Surv3)
head(SummaryData3)
TotalData <- rbind(TotalData, SummaryData3)
#for data4
Data <- read.table('data4.txt', sep="\t", stringsAsFactors=F, header=T)
head(Data)
SummaryData4<-cbind(Data[,1], Data[,3])
TotalData <- rbind(TotalData, SummaryData4)
head(SummaryData4)
#For data5
Data <- read.csv('data5.csv', stringsAsFactors=F)
Surv5<- Data[,4]
Temp5<-Data[,3]
head(Data)
SummaryData5<-cbind(Temp5, Surv5)
TotalData <- rbind(TotalData, SummaryData5)
#For data6
Data <- read.csv('data6.csv', stringsAsFactors=F)
Surv6<- Data[,12]
Temp6<-Data[,1]
head(Data)
SummaryData6<-cbind(Temp6, Surv6)
head(SummaryData6)
TotalData <- rbind(TotalData, SummaryData6)
plot(TotalData[,1], TotalData[,2], xlab="Temperature (Celsius)", ylab="Proportion hatching (%)")
LM <- lm(TotalData[,2]~TotalData[,1])
abline(LM, col="black", lty=1)
summary(LM)
legend("topleft", bty="n", legend=paste("r = ", round(LM$estimate), sep=""))
MeanViability<-mean(TotalData[,2])
head(MeanViability)
SDViability<-sd(TotalData[,2])
head(SDViability)
ModeTemperature<-mode(TotalData[,1])
head(ModeTemperature)
CTest <- cor.test(TotalData[,1], TotalData[,2])
ViabilityANOVA <- aov(TotalData[,1] ~ TotalData[,2])
boxplot( TotalData[,2] ~ TotalData[,1], xlab="Temperature", ylab= "Percent Hatching" )
legend("topleft", bty="n", legend=paste("r = ", round(CTest$estimate), sep=""))
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01 )
boxplot
TotalData[,2]
mean(TotalData[,2]
mean(TotalData[,2])
mean(TotalData[,2])
plot(TotalData[,1], TotalData[,2], xlab="Temperature (Celsius)", ylab="Proportion hatching (%)")
LM <- lm(TotalData[,2]~TotalData[,1])
abline(LM, col="black", lty=1)
summary(LM)
ViabilityANOVA <- aov(TotalData[,1] ~ TotalData[,2])
ViabilityANOVA
SD(TotalData[,2])
SDViability<-sd(TotalData[,2])
head(SDViability)
CTest
citation()
q()
