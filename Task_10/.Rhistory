s <- apply(rescaleFreq, 2, function(x) lines(overalFreq[,1], x, col=rgb(0,0,0,0.01)))
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(-0.25, 0.25))
dYear <- c()
dAlleles <- c()
for(i in 3:ncol(overalFreq)) {
dYear <- c(dYear, overallFreq[,1])
Vec <- overallFreq[,i]
Init <- overallFreq[1,i]
dAlleles <- c(dAlleles, Vec - Init)
}
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100)
smoothScatter(dYear, dAlleles, colramp=Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
addFit(nruns=50, n=100, ngens=18, startT=1997, simCol="gray40", rescale=TRUE)
plot(alleleFreqs$d_freq, alleleFreqs$d_imm, xlim=c(-0.15, 0.15), xlab="overall freq. change", ylab="freq. change in subset")
points(alleleFreqs$d_freq, alleleFreqs$d_birth, col='blue')
points(alleleFreqs$d_freq, alleleFreqs$d_surv, col='red')
points(alleleFreqs$d_freq, alleleFreqs$d_birth, col='blue')
q()
setwd('~/Desktop/Evolution/Tasks/Task_07')
library(phytools)
library(ape)
text.string <-
'(((((((cow, pig), whale),(bat,(lemur, human))), (robin, iguana)), coelacanth
), (gold_fish, trout)), shark);'
vert.tree <- read.tree(text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame='circle', bg='white', cex=1)
Question 1: The goldfish is more closely related to a shark than a human.
vert.tree
Question 2: No, there are no branch lengths in this tree. 
str(vert.tree)
tree <- read.tree(text='(((A,B), (C,D)), E);')
plotTree(tree, offset=1)
tiplabels(frame='circle', bg='lightblue', cex=1)
nodelabels(frame='circle', bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree <- force.ultrametric(read.tree('https://jonsmitchell.com/data/anolis.tre'))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main='', xlab='edge lengths for Anolis tree', ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2] <= Ntip(AnolisTree))
tipEdges
Lengths <- AnolisTree$edge.length
names(Lengths) <- AnolisTree$tip.label
names(Lengths)[which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
Question 3:
tree <- read.tree(text='(((A, B), (C, D)), E);')
plot.phylo(tree, type='phylogram', show.tip.label=FALSE, edge.color='red')
Question 4:
plot.phylo(tree, type='radial')
Question 5:
plot.phylo(tree, tip.color = 'red')
Question6-8: Anolis occultis
plot(AnolisTree, cex=0.25) had the shortest edge length.
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
which(Lengths == min(Lengths))
names(Lengths)
AnolisTree2 <- drop.tip(AnolisTree, 'Anolis_occultus')
plot(AnolisTree2, cex=0.25)
setwd('~/Desktop/Evolution/Tasks/Task_07')
library(phytools)
library(ape)
text.string <-
'(((((((cow, pig), whale),(bat,(lemur, human))), (robin, iguana)), coelacanth
), (gold_fish, trout)), shark);'
vert.tree <- read.tree(text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame='circle', bg='white', cex=1)
Question 1: The goldfish is more closely related to a shark than a human.
vert.tree
Question 2: No, there are no branch lengths in this tree. 
str(vert.tree)
tree <- read.tree(text='(((A,B), (C,D)), E);')
plotTree(tree, offset=1)
tiplabels(frame='circle', bg='lightblue', cex=1)
nodelabels(frame='circle', bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree <- force.ultrametric(read.tree('https://jonsmitchell.com/data/anolis.tre'))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main='', xlab='edge lengths for Anolis tree', ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2] <= Ntip(AnolisTree))
tipEdges
Lengths <- AnolisTree$edge.length
names(Lengths) <- AnolisTree$tip.label
names(Lengths)[which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
Question 3:
tree <- read.tree(text='(((A, B), (C, D)), E);')
plot.phylo(tree, type='phylogram', show.tip.label=FALSE, edge.color='red')
Question 4:
plot.phylo(tree, type='radial')
Question 5:
plot.phylo(tree, tip.color = 'red')
Question6-8: Anolis occultis
plot(AnolisTree, cex=0.25) had the shortest edge length.
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
which(Lengths == min(Lengths))
names(Lengths)
AnolisTree2 <- drop.tip(AnolisTree, 'Anolis_occultus')
plot(AnolisTree2, cex=0.25)
tree <- read.tree(text='(((A, B), (C, D)), E);')
plot.phylo(tree, type='phylogram', show.tip.label=FALSE, edge.color='red')
Question 4:
plot.phylo(tree, type='radial')
Question 5:
plot.phylo(tree, tip.color = 'red')
Question6-8: Anolis occultis had the shortest edge length.
plot(AnolisTree, cex=0.25) 
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
which(Lengths == min(Lengths))
names(Lengths)
AnolisTree2 <- drop.tip(AnolisTree, 'Anolis_occultus')
plot(AnolisTree2, cex=0.25)
ltt(AnolisTree)
abline(0, 1, lwd=2, col='red', lty=2)
The line never goes down because it is increasing until tje slope hits a plateau meaning that the lizards will reach an asymptote eventually but increase until then. 
fit.bd(AnolisTree, rho = 0.2)
install.packages('treebase')
library('treebase')
library('ape')
Dolphins <- search_treebase("Delphinus", by='taxon', max_trees = 10)
WillWork <- sapply(Dolphins, function(x) try(is.ultrametric(x)))
which(WillWork == TRUE)
pdf('r07_DolphinPhylogeny.pdf', height =5, width=5)
DolphinPlot <- plot.phylo(Dolphins[[9]], cex = 0.35)
dev.off()
is.ultrametric(Dolphins[[7]])
bddolphin <- fit.bd(Dolphins[[7]], rho = 0.2)
bddolphin
b = 0.67 d= 0.59
Tigers <- search_treebase("Tigris", by='taxon', max_trees=3)
WillWork <- sapply(Tigers, function(x) try(is.ultrametric(x)))
pdf('r07_TigerPhylogeny.pdf', height =5, width=5)
TigersPlot <- plot.phylo(Tigers[[2]], cex=0.1)
dev.off()
bdtigers <- fit.bd(Tigers[[2]], rho = 0.2)
bdtigers
b = 0.67 d= 0.62
Warblers <- search_treebase("Basileuterus", by='taxon', max_trees=20)
length(Warblers)
pdf('r07_WarblerPhylogeny.pdf', height =5, width=5)
WarblersPlot <- plot.phylo(Warblers[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Warblers, function(x) try(is.ultrametric(x)))
bdwarblers <- fit.bd(Warblers[[1]], rho =0.2)
bdwarblers
b = 1.08 d= 0.90
Elephants <- search_treebase('elephas', by='taxon', max_trees=25)
setwd('~/Desktop/Evolution/Tasks/Task_07')
library(phytools)
library(ape)
text.string <-
'(((((((cow, pig), whale),(bat,(lemur, human))), (robin, iguana)), coelacanth
), (gold_fish, trout)), shark);'
vert.tree <- read.tree(text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame='circle', bg='white', cex=1)
Question 1: The goldfish is more closely related to a shark than a human.
vert.tree
Question 2: No, there are no branch lengths in this tree. 
str(vert.tree)
tree <- read.tree(text='(((A,B), (C,D)), E);')
plotTree(tree, offset=1)
tiplabels(frame='circle', bg='lightblue', cex=1)
nodelabels(frame='circle', bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree <- force.ultrametric(read.tree('https://jonsmitchell.com/data/anolis.tre'))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main='', xlab='edge lengths for Anolis tree', ylim=c(0,50), xlim=c(0,6))
tipEdges <- which(AnolisTree$edge[,2] <= Ntip(AnolisTree))
tipEdges
Lengths <- AnolisTree$edge.length
names(Lengths) <- AnolisTree$tip.label
names(Lengths)[which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
Question 3:
tree <- read.tree(text='(((A, B), (C, D)), E);')
plot.phylo(tree, type='phylogram', show.tip.label=FALSE, edge.color='red')
Question 4:
plot.phylo(tree, type='radial')
Question 5:
plot.phylo(tree, tip.color = 'red')
Question6-8: Anolis occultis had the shortest edge length.
plot(AnolisTree, cex=0.25) 
Labs <- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
which(Lengths == min(Lengths))
names(Lengths)
AnolisTree2 <- drop.tip(AnolisTree, 'Anolis_occultus')
plot(AnolisTree2, cex=0.25)
ltt(AnolisTree)
abline(0, 1, lwd=2, col='red', lty=2)
The line never goes down because it is increasing until the slope hits a plateau meaning that the lizards will reach an asymptote eventually but increase until then. 
fit.bd(AnolisTree, rho = 0.2)
install.packages('treebase')
library('treebase')
library('ape')
Warblers <- search_treebase("Basileuterus", by="taxon", max_trees=20)
length(Warblers)
pdf("r07-WarblerPhylo.pdf", height=5, width=5)
WarblersPlot <- plot.phylo(Warblers[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Warblers, function(x) try(is.ultrametric(x)))
WillWork
bdwarblers <- fit.bd(Warblers[[1]], rho=0.2)
bdwarblers
b=15.4316 d=8.0977
Skinks <- search_treebase("Dasia", by="taxon", max_trees=20)
length(Skinks)
pdf("r07-SkinksPhylo.pdf", height=5, width=5)
SkinksPlot <- plot.phylo(Skinks[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Skinks, function(x) try(is.ultrametric(x)))
WillWor
bdskinks <- fit.bd(Warblers[[1]], rho=0.2)
bdskinks
b=15.4316 d=8.0977
TreeFrogs <- search_treebase("Hyla", by="taxon", max_trees=20)
length(TreeFrogs)
pdf("r07-TreeFrogsPhylo.pdf", height=5, width=5)
TreeFrogsPlot <- plot.phylo(TreeFrogs[[1]], cex=0.35)
dev.off()
WillWork <- sapply(TreeFrogs, function(x) try(is.ultrametric(x)))
WillWork
bdTreeFrogs <- fit.bd(TreeFrogs[[1]], rho=0.2)
bdTreeFrogs
Skinks <- search_treebase("Dasia", by="taxon", max_trees=20)
length(Skinks)
pdf("r07-SkinksPhylo.pdf", height=5, width=5)
SkinksPlot <- plot.phylo(Skinks[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Skinks, function(x) try(is.ultrametric(x)))
WillWork
bdskinks <- fit.bd(Warblers[[1]], rho=0.2)
bdskinks
install.packages("treebase")
library("treebase")
library("ape")
Elephants <- search_treebase("Elephas", by="taxon", max_trees=20)
length(Elephants)
pdf("r07-WarblerPhylo.pdf", height=5, width=5)
ElephantsPlot <- plot.phylo(Elephants[[1]], cex=0.35
dev.off()
WillWork <- sapply(Elephants, function(x) try(is.ultrametric(x)))
WillWork
bdElephants <- fit.bd(Elephants[[1]], rho=0.2)
bdElephants
Warblers <- search_treebase("Basileuterus", by="taxon", max_trees=20)
length(Warblers)
pdf("r07-WarblerPhylo.pdf", height=5, width=5)
WarblersPlot <- plot.phylo(Warblers[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Warblers, function(x) try(is.ultrametric(x)))
WillWork
bdwarblers <- fit.bd(Warblers[[1]], rho=0.2)
bdwarblers
b=15.4316 d=8.0977
Elephants <- search_treebase("Elephas", by="taxon", max_trees=20)
length(Elephants)
pdf("r07-ElephantPhylo.pdf", height=5, width=5)
ElephantsPlot <- plot.phylo(Elephants[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Elephants, function(x) try(is.ultrametric(x)))
WillWork
bdElephants <- fit.bd(Elephants[[1]], rho=0.2)
bdElephants
pdf("r07-ElephantPhylo.pdf", height=5, width=5)
Monkeys <- search_treebase("Guenon", by="taxon", max_trees=20)
length(Monkeys)
pdf("r07-MonkeysPhylo.pdf", height=5, width=5)
MonkeysPlot <- plot.phylo(Monkeys[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Monkeys, function(x) try(is.ultrametric(x)))
WillWork
bdMonkeys <- fit.bd(Monkeys[[1]], rho=0.2)
bdMonkeys
Primates <- search_treebase("Cheirogaleus", by="taxon", max_trees=20)
length(Primates)
pdf("r07-PrimatesPhylo.pdf", height=5, width=5)
PrimatesPlot <- plot.phylo(Primates[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Primates, function(x) try(is.ultrametric(x)))
WillWork
bdPrimates <- fit.bd(Primates[[1]], rho=0.2)
bdPrimates
Tigers <- search_treebase("Tigris", by="taxon", max_trees=20)
length(Tigers)
pdf("r07-TigersPhylo.pdf", height=5, width=5)
TigersPlot <- plot.phylo(Tigers[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Tigers, function(x) try(is.ultrametric(x)))
WillWork
bdTigers <- fit.bd(Tigers[[1]], rho=0.2)
bdTigers
Tigers <- search_treebase("Tigris", by="taxon", max_trees=20)
length(Tigers)
pdf("r07-TigersPhylo.pdf", height=5, width=5)
TigersPlot <- plot.phylo(Tigers[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Tigers, function(x) try(force.ultrametric(x)))
WillWork
bdTigers <- fit.bd(Tigers[[1]], rho=0.2)
bdTigers
Lions <- search_treebase("Panthera", by="taxon", max_trees=20)
length(Lions)
pdf("r07-LionsPhylo.pdf", height=5, width=5)
LionsPlot <- plot.phylo(Lions[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Lions, function(x) try(is.ultrametric(x)))
WillWork
bdLions <- fit.bd(Lions[[1]], rho=0.2)
bdLions
Chickens <- search_treebase("Junglefowl", by="taxon", max_trees=20)
length(Chickens)
pdf("r07-ChickensPhylo.pdf", height=5, width=5)
ChickensPlot <- plot.phylo(Chickens[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Chickens, function(x) try(is.ultrametric(x)))
WillWork
bdChickens <- fit.bd(Chickens[[1]], rho=0.2)
bdChickens
Dogs <- search_treebase("Canus", by="taxon", max_trees=20)
length(Dogs)
pdf("r07-DogsPhylo.pdf", height=5, width=5)
DogsPlot <- plot.phylo(Dogs[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Dogs, function(x) try(is.ultrametric(x)))
WillWork
bdDogs <- fit.bd(Dogs[[1]], rho=0.2)
bdDogs
Pandas <- search_treebase("Panthera", by="taxon", max_trees=20)
length(Pandas)
pdf("r07-PandasPhylo.pdf", height=5, width=5)
PandasPlot <- plot.phylo(Pandas[[1]], cex=0.35)
dev.off()
WillWork <- sapply(Pandas, function(x) try(is.ultrametric(x)))
WillWork
bdPandas <- fit.bd(Pandas[[1]], rho=0.2)
q()
setwd('C:\\Users\\Skyler Richmond\\Desktop\\Evolution\\Tasks\\Task_10')
install.packages("diversitree")
library("diversitree")
transition_0to1<- 0.1
transition_1to0<-0.1
speciation_0<- 0.2
excitntion_0<-0.1
speciation_1<-0.2
excitntion_1<-0.1
maxN<-1e3
maxT<- 50
Pars<-c(speciation_0, speciation_1, excitntion_0, excitntion_1, transition_0to1, transition_1to0)
simTree<- tree.bisse(Pars, max.taxa = maxN, max.t= maxT)
str(simTree)
?tree.bisse
stateTable<-table(simTree$tip.state)
stateTable / sum(stateTable)
Frequencies <-c('State0', 'State1')
Colors<-c('red','blue')
Data<- matrix(c(0.3, 0.32, 0.33, 0.35, 0.43, 0.56, 0.568, 0.57, 0.642, 0.647, 0.68, 0.69), nrow=2, ncol=6, byrow=TRUE )
Question 1: For state 1 to be high with a lower diversification, the speciation rate would be lower and an inverse relationship between the frequency of state 1 and the net diversification would have to be present. 
Difference <-c(0.01, 0.02, 0.03, 0.05, 0.1, 0.15)
Frequencyof1<- c(0.3, 0.32, 0.33, 0.35, 0.43, 0.568)
Frequencyof0<-c(0.43, 0.57, 0.642, 0.647, 0.68, 0.69)
pdf('Question1.pdf', height=6, width=6)
barplot(Data, names.arg=Difference, main='Change in Frequency of the States based on Variation in the R Values', xlab='Difference in Rate of Diversification', ylab= 'Frequency', beside=TRUE, col=c('orange', 'blue'))
legend('top', Frequencies, fill= 'orange', 'blue')
dev.off()
Question 2: The state 1 frequecy was never zero but close when the net diversification rate of state 0 was increased. 
Frequencies <-c('State0', 'State1')
Data<- matrix(c(0.05, 0.016, 0.022, 0.037, 0.045, 0.14, 0.2, 0.37, 0.8, 0.92, 0.97))
Data
Difference<-c(0.05, 0, 0.1, 0.2, 0.3, 0.45)
pdf('Question2.pdf', height=8, width=8)
barplot(Data, names.arg=Difference, main='Close to Zero State 1 for Transition Rate of Nonzero', xlab='Difference in Diversification Rate', ylab='Frequencies', col=c('pink','purple'))
legend('topright', Frequencies, fill='pink', 'purple')
dev.off()
Question 3: There was a some but not much variance in frequency as demonstrated by the trials I ran. 
Data<-read.csv('C:\\Users\\Skyler Richmond\\Desktop\\Evolution\\Tasks\\Task_10\\Question3_Data.csv', stringsAsFactors=F)
head(Data)
Frequency1Trial1<-Data[,2]
Freqeuncy1Trial2<-Data[,5]
Frequency1Trial3<--Data[,8]
Variance1<-var(Frequency1Trial1)
Variance2<-var(Freqeuncy1Trial2)
Variance3<-var(Frequency1Trial3)
Variance1
Variance2
Variance3
TotalVarianceMatrix<-c(Variance1, Variance2, Variance3)
TotalVarianceMatrix
Trial<-c(1, 2, 3)
pdf('Question3.pdf', height=8, width=8)
barplot(TotalVarianceMatrix, names.arg=Trial, ylim=c(0, 0.5), xlab='Trial Number', ylab='Variance in Differnt Frequencies', col='yellow')
dev.off()
Question 4:
Data
Frequencyof0<-Data[,2]
Frequencyof0
NetDivR0<-Data[,1]
pdf("Trend1.pdf", height=8, width=8)
plot(NetDivRof0, Frequencyof0, main='Change in Frequency of State 0 Based on Net Diversification Rate', xlab='Net Diversification Rate of State 0', ylab='Frequency of State 0')
abline(lm(Frequencyof0~NetDivRof0), col='green', lty='dashed')
Data
Frequencyof0<-Data[,2]
Frequencyof0
NetDivR0<-Data[,1]
pdf("Trend1.pdf", height=8, width=8)
plot(NetDivR0, Frequencyof0, main='Change in Frequency of State 0 Based on Net Diversification Rate', xlab='Net Diversification Rate of State 0', ylab='Frequency of State 0')
abline(lm(Frequencyof0~NetDivR0), col='green', lty='dashed')
dev.off()
Frequencyof1<-Data[,7]
NetDivR1<-Data[,5]
pdf("Trend2.pdf", height=8, width=8)
plot(NetDivR1, Frequencyof1, main='Change in Frequency of State 1 Based on Net Diversification Rate', xlab='Net Diversification Rate of State 1', ylab='Frequency of State 1')
abline(lm(Frequencyof1~NetDivR1), col='yellow', lty='dashed')
dev.off()
Data
head(Data)
Frequency1Trial1<-Data[,2]
Freqeuncy1Trial2<-Data[,5]
Frequency1Trial3<--Data[,8]
Variance1<-var(Frequency1Trial1)
Variance2<-var(Freqeuncy1Trial2)
Variance3<-var(Frequency1Trial3)
Variance1
Variance2
Variance3
TotalVarianceMatrix<-c(Variance1, Variance2, Variance3)
TotalVarianceMatrix
Trial<-c(1, 2, 3)
pdf('Question3.pdf', height=8, width=8)
barplot(TotalVarianceMatrix, names.arg=Trial, ylim=c(0, 0.5), xlab='Trial Number', ylab='Variance in Differnt Frequencies', col='yellow')
dev.off()
Question 4:
Data
Frequencyof0<-Data[,2]
Frequencyof0
NetDivR0<-Data[,1]
pdf("Trend1.pdf", height=8, width=8)
plot(NetDivR0, Frequencyof0, main='Change in Frequency of State 0 Based on Net Diversification Rate', xlab='Net Diversification Rate of State 0', ylab='Frequency of State 0')
abline(lm(Frequencyof0~NetDivR0), col='green', lty='dashed')
dev.off()
Frequencyof1<-Data[,7]
NetDivR1<-Data[,5]
pdf("Trend2.pdf", height=8, width=8)
plot(NetDivR1, Frequencyof1, main='Change in Frequency of State 1 Based on Net Diversification Rate', xlab='Net Diversification Rate of State 1', ylab='Frequency of State 1')
abline(lm(Frequencyof1~NetDivR1), col='yellow', lty='dashed')
dev.off()
Frequencies <-c('State0', 'State1')
Data<- matrix(c(0.015, 0.016, 0.022, 0.023, 0.037, 0.045, 0.057, 0.078, 0.1, 0.14, 0.18, 0.2, 0.23, 0.26, 0.34, 0.37, 0.4, 0.43, 0.46, 0.52, 0.55, 0.58, 0.6, 0.63, 0.66, 0.7, 0.74,  0.77, 0.8, 0.83, 0.85, 0.92, 0.95, 0.97))
Data
Difference<-c(0.05, 0.06, 0, 0, 0, 0.1, 0.1, 0.1, 0.2, 0.2, 0.3, 0.33, 0.43, 0.33, 0.33, 0.45, 0.45)
pdf('Question2.pdf', height=8, width=8)
barplot(Data, names.arg=Difference, main='Close to Zero State 1 for Transition Rate of Nonzero', xlab='Difference in Diversification Rate', ylab='Frequencies', col=c('pink','purple'))
legend('topright', Frequencies, fill='pink', 'purple')
dev.off()
Frequencies <-c('State0', 'State1')
Data<- matrix(c(0.015, 0.016, 0.022, 0.023, 0.037, 0.045, 0.057, 0.078, 0.1, 0.14, 0.18, 0.2, 0.23, 0.26, 0.34, 0.37, 0.4, 0.43, 0.46, 0.52, 0.55, 0.58, 0.6, 0.63, 0.66, 0.7, 0.74,  0.77, 0.8, 0.83, 0.85, 0.92, 0.95, 0.97))
Data
Difference<-c(0.05, 0.06, 0, 0, 0, 0.1, 0.1, 0.1, 0.2, 0.2, 0.3, 0.33, 0.43, 0.33, 0.33, 0.45, 0.45)
pdf('Question2.pdf', height=8, width=8)
barplot(Data, names.arg=Difference, main='Close to Zero State 1 for Transition Rate of Nonzero', xlab='Difference in Diversification Rate', ylab='Frequencies',col=c('pink','purple'))
legend('topright', Frequencies, fill='pink', 'purple')
dev.off()
Question 3: There was a some but not much variance in frequency as demonstrated by the trials I ran. 
Data
head(Data)
Frequency1Trial1<-Data[,2]
Freqeuncy1Trial2<-Data[,5]
Frequency1Trial3<--Data[,8]
Variance1<-var(Frequency1Trial1)
Variance2<-var(Freqeuncy1Trial2)
Variance3<-var(Frequency1Trial3)
Variance1
Variance2
Variance3
TotalVarianceMatrix<-c(Variance1, Variance2, Variance3)
TotalVarianceMatrix
Trial<-c(1, 2, 3)
pdf('Question3.pdf', height=8, width=8)
barplot(TotalVarianceMatrix, names.arg=Trial, ylim=c(0, 0.5), xlab='Trial Number', ylab='Variance in Differnt Frequencies', col='yellow')
dev.off()
Question 4:
Data
Frequencyof0<-Data[,2]
Frequencyof0
NetDivR0<-Data[,1]
pdf("Trend1.pdf", height=8, width=8)
plot(NetDivR0, Frequencyof0, main='Change in Frequency of State 0 Based on Net Diversification Rate', xlab='Net Diversification Rate of State 0', ylab='Frequency of State 0')
abline(lm(Frequencyof0~NetDivR0), col='green', lty='dashed')
dev.off()
Frequencyof1<-Data[,7]
NetDivR1<-Data[,5]
pdf("Trend2.pdf", height=8, width=8)
plot(NetDivR1, Frequencyof1, main='Change in Frequency of State 1 Based on Net Diversification Rate', xlab='Net Diversification Rate of State 1', ylab='Frequency of State 1')
abline(lm(Frequencyof1~NetDivR1), col='yellow', lty='dashed')
q()
